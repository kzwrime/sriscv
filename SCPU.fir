;buildInfoPackage: chisel3, version: 3.4.3, scalaVersion: 2.12.12, sbtVersion: 1.3.10
circuit SCPU : 
  module Decode : 
    input clock : Clock
    input reset : Reset
    output io : {flip instr : UInt<32>, branch : UInt<1>, jump : UInt<2>, memRead : UInt<1>, memWrite : UInt<1>, regWrite : UInt<1>, toReg : UInt<1>, resultSel : UInt<2>, aluSrc : UInt<1>, pcAdd : UInt<1>, types : UInt<7>, aluCtrlOp : UInt<2>, validInst : UInt<1>, imm : UInt<32>}
    
    node _signals_T = and(io.instr, UInt<7>("h07f")) @[Lookup.scala 31:38]
    node _signals_T_1 = eq(UInt<6>("h037"), _signals_T) @[Lookup.scala 31:38]
    node _signals_T_2 = and(io.instr, UInt<7>("h07f")) @[Lookup.scala 31:38]
    node _signals_T_3 = eq(UInt<5>("h017"), _signals_T_2) @[Lookup.scala 31:38]
    node _signals_T_4 = and(io.instr, UInt<7>("h07f")) @[Lookup.scala 31:38]
    node _signals_T_5 = eq(UInt<7>("h06f"), _signals_T_4) @[Lookup.scala 31:38]
    node _signals_T_6 = and(io.instr, UInt<7>("h07f")) @[Lookup.scala 31:38]
    node _signals_T_7 = eq(UInt<7>("h067"), _signals_T_6) @[Lookup.scala 31:38]
    node _signals_T_8 = and(io.instr, UInt<7>("h07f")) @[Lookup.scala 31:38]
    node _signals_T_9 = eq(UInt<7>("h063"), _signals_T_8) @[Lookup.scala 31:38]
    node _signals_T_10 = and(io.instr, UInt<7>("h07f")) @[Lookup.scala 31:38]
    node _signals_T_11 = eq(UInt<2>("h03"), _signals_T_10) @[Lookup.scala 31:38]
    node _signals_T_12 = and(io.instr, UInt<7>("h07f")) @[Lookup.scala 31:38]
    node _signals_T_13 = eq(UInt<6>("h023"), _signals_T_12) @[Lookup.scala 31:38]
    node _signals_T_14 = and(io.instr, UInt<7>("h07f")) @[Lookup.scala 31:38]
    node _signals_T_15 = eq(UInt<5>("h013"), _signals_T_14) @[Lookup.scala 31:38]
    node _signals_T_16 = and(io.instr, UInt<7>("h07f")) @[Lookup.scala 31:38]
    node _signals_T_17 = eq(UInt<6>("h033"), _signals_T_16) @[Lookup.scala 31:38]
    node _signals_T_18 = mux(_signals_T_17, UInt<1>("h00"), UInt<1>("h00")) @[Lookup.scala 33:37]
    node _signals_T_19 = mux(_signals_T_15, UInt<1>("h00"), _signals_T_18) @[Lookup.scala 33:37]
    node _signals_T_20 = mux(_signals_T_13, UInt<1>("h00"), _signals_T_19) @[Lookup.scala 33:37]
    node _signals_T_21 = mux(_signals_T_11, UInt<1>("h00"), _signals_T_20) @[Lookup.scala 33:37]
    node _signals_T_22 = mux(_signals_T_9, UInt<1>("h01"), _signals_T_21) @[Lookup.scala 33:37]
    node _signals_T_23 = mux(_signals_T_7, UInt<1>("h00"), _signals_T_22) @[Lookup.scala 33:37]
    node _signals_T_24 = mux(_signals_T_5, UInt<1>("h00"), _signals_T_23) @[Lookup.scala 33:37]
    node _signals_T_25 = mux(_signals_T_3, UInt<1>("h00"), _signals_T_24) @[Lookup.scala 33:37]
    node signals_0 = mux(_signals_T_1, UInt<1>("h00"), _signals_T_25) @[Lookup.scala 33:37]
    node _signals_T_26 = mux(_signals_T_17, UInt<1>("h00"), UInt<1>("h00")) @[Lookup.scala 33:37]
    node _signals_T_27 = mux(_signals_T_15, UInt<1>("h00"), _signals_T_26) @[Lookup.scala 33:37]
    node _signals_T_28 = mux(_signals_T_13, UInt<1>("h00"), _signals_T_27) @[Lookup.scala 33:37]
    node _signals_T_29 = mux(_signals_T_11, UInt<1>("h00"), _signals_T_28) @[Lookup.scala 33:37]
    node _signals_T_30 = mux(_signals_T_9, UInt<1>("h00"), _signals_T_29) @[Lookup.scala 33:37]
    node _signals_T_31 = mux(_signals_T_7, UInt<2>("h02"), _signals_T_30) @[Lookup.scala 33:37]
    node _signals_T_32 = mux(_signals_T_5, UInt<1>("h01"), _signals_T_31) @[Lookup.scala 33:37]
    node _signals_T_33 = mux(_signals_T_3, UInt<1>("h00"), _signals_T_32) @[Lookup.scala 33:37]
    node signals_1 = mux(_signals_T_1, UInt<1>("h00"), _signals_T_33) @[Lookup.scala 33:37]
    node _signals_T_34 = mux(_signals_T_17, UInt<1>("h00"), UInt<1>("h00")) @[Lookup.scala 33:37]
    node _signals_T_35 = mux(_signals_T_15, UInt<1>("h00"), _signals_T_34) @[Lookup.scala 33:37]
    node _signals_T_36 = mux(_signals_T_13, UInt<1>("h00"), _signals_T_35) @[Lookup.scala 33:37]
    node _signals_T_37 = mux(_signals_T_11, UInt<1>("h01"), _signals_T_36) @[Lookup.scala 33:37]
    node _signals_T_38 = mux(_signals_T_9, UInt<1>("h00"), _signals_T_37) @[Lookup.scala 33:37]
    node _signals_T_39 = mux(_signals_T_7, UInt<1>("h00"), _signals_T_38) @[Lookup.scala 33:37]
    node _signals_T_40 = mux(_signals_T_5, UInt<1>("h00"), _signals_T_39) @[Lookup.scala 33:37]
    node _signals_T_41 = mux(_signals_T_3, UInt<1>("h00"), _signals_T_40) @[Lookup.scala 33:37]
    node signals_2 = mux(_signals_T_1, UInt<1>("h00"), _signals_T_41) @[Lookup.scala 33:37]
    node _signals_T_42 = mux(_signals_T_17, UInt<1>("h00"), UInt<1>("h00")) @[Lookup.scala 33:37]
    node _signals_T_43 = mux(_signals_T_15, UInt<1>("h00"), _signals_T_42) @[Lookup.scala 33:37]
    node _signals_T_44 = mux(_signals_T_13, UInt<1>("h01"), _signals_T_43) @[Lookup.scala 33:37]
    node _signals_T_45 = mux(_signals_T_11, UInt<1>("h00"), _signals_T_44) @[Lookup.scala 33:37]
    node _signals_T_46 = mux(_signals_T_9, UInt<1>("h00"), _signals_T_45) @[Lookup.scala 33:37]
    node _signals_T_47 = mux(_signals_T_7, UInt<1>("h00"), _signals_T_46) @[Lookup.scala 33:37]
    node _signals_T_48 = mux(_signals_T_5, UInt<1>("h00"), _signals_T_47) @[Lookup.scala 33:37]
    node _signals_T_49 = mux(_signals_T_3, UInt<1>("h00"), _signals_T_48) @[Lookup.scala 33:37]
    node signals_3 = mux(_signals_T_1, UInt<1>("h00"), _signals_T_49) @[Lookup.scala 33:37]
    node _signals_T_50 = mux(_signals_T_17, UInt<1>("h01"), UInt<1>("h00")) @[Lookup.scala 33:37]
    node _signals_T_51 = mux(_signals_T_15, UInt<1>("h01"), _signals_T_50) @[Lookup.scala 33:37]
    node _signals_T_52 = mux(_signals_T_13, UInt<1>("h00"), _signals_T_51) @[Lookup.scala 33:37]
    node _signals_T_53 = mux(_signals_T_11, UInt<1>("h01"), _signals_T_52) @[Lookup.scala 33:37]
    node _signals_T_54 = mux(_signals_T_9, UInt<1>("h00"), _signals_T_53) @[Lookup.scala 33:37]
    node _signals_T_55 = mux(_signals_T_7, UInt<1>("h01"), _signals_T_54) @[Lookup.scala 33:37]
    node _signals_T_56 = mux(_signals_T_5, UInt<1>("h01"), _signals_T_55) @[Lookup.scala 33:37]
    node _signals_T_57 = mux(_signals_T_3, UInt<1>("h01"), _signals_T_56) @[Lookup.scala 33:37]
    node signals_4 = mux(_signals_T_1, UInt<1>("h01"), _signals_T_57) @[Lookup.scala 33:37]
    node _signals_T_58 = mux(_signals_T_17, UInt<1>("h00"), UInt<1>("h00")) @[Lookup.scala 33:37]
    node _signals_T_59 = mux(_signals_T_15, UInt<1>("h00"), _signals_T_58) @[Lookup.scala 33:37]
    node _signals_T_60 = mux(_signals_T_13, UInt<1>("h00"), _signals_T_59) @[Lookup.scala 33:37]
    node _signals_T_61 = mux(_signals_T_11, UInt<1>("h01"), _signals_T_60) @[Lookup.scala 33:37]
    node _signals_T_62 = mux(_signals_T_9, UInt<1>("h00"), _signals_T_61) @[Lookup.scala 33:37]
    node _signals_T_63 = mux(_signals_T_7, UInt<1>("h00"), _signals_T_62) @[Lookup.scala 33:37]
    node _signals_T_64 = mux(_signals_T_5, UInt<1>("h00"), _signals_T_63) @[Lookup.scala 33:37]
    node _signals_T_65 = mux(_signals_T_3, UInt<1>("h00"), _signals_T_64) @[Lookup.scala 33:37]
    node signals_5 = mux(_signals_T_1, UInt<1>("h00"), _signals_T_65) @[Lookup.scala 33:37]
    node _signals_T_66 = mux(_signals_T_17, UInt<1>("h00"), UInt<1>("h00")) @[Lookup.scala 33:37]
    node _signals_T_67 = mux(_signals_T_15, UInt<1>("h00"), _signals_T_66) @[Lookup.scala 33:37]
    node _signals_T_68 = mux(_signals_T_13, UInt<1>("h00"), _signals_T_67) @[Lookup.scala 33:37]
    node _signals_T_69 = mux(_signals_T_11, UInt<1>("h00"), _signals_T_68) @[Lookup.scala 33:37]
    node _signals_T_70 = mux(_signals_T_9, UInt<1>("h00"), _signals_T_69) @[Lookup.scala 33:37]
    node _signals_T_71 = mux(_signals_T_7, UInt<2>("h02"), _signals_T_70) @[Lookup.scala 33:37]
    node _signals_T_72 = mux(_signals_T_5, UInt<2>("h02"), _signals_T_71) @[Lookup.scala 33:37]
    node _signals_T_73 = mux(_signals_T_3, UInt<1>("h00"), _signals_T_72) @[Lookup.scala 33:37]
    node signals_6 = mux(_signals_T_1, UInt<1>("h01"), _signals_T_73) @[Lookup.scala 33:37]
    node _signals_T_74 = mux(_signals_T_17, UInt<1>("h00"), UInt<1>("h00")) @[Lookup.scala 33:37]
    node _signals_T_75 = mux(_signals_T_15, UInt<1>("h01"), _signals_T_74) @[Lookup.scala 33:37]
    node _signals_T_76 = mux(_signals_T_13, UInt<1>("h01"), _signals_T_75) @[Lookup.scala 33:37]
    node _signals_T_77 = mux(_signals_T_11, UInt<1>("h01"), _signals_T_76) @[Lookup.scala 33:37]
    node _signals_T_78 = mux(_signals_T_9, UInt<1>("h00"), _signals_T_77) @[Lookup.scala 33:37]
    node _signals_T_79 = mux(_signals_T_7, UInt<1>("h01"), _signals_T_78) @[Lookup.scala 33:37]
    node _signals_T_80 = mux(_signals_T_5, UInt<1>("h00"), _signals_T_79) @[Lookup.scala 33:37]
    node _signals_T_81 = mux(_signals_T_3, UInt<1>("h01"), _signals_T_80) @[Lookup.scala 33:37]
    node signals_7 = mux(_signals_T_1, UInt<1>("h00"), _signals_T_81) @[Lookup.scala 33:37]
    node _signals_T_82 = mux(_signals_T_17, UInt<1>("h00"), UInt<1>("h00")) @[Lookup.scala 33:37]
    node _signals_T_83 = mux(_signals_T_15, UInt<1>("h00"), _signals_T_82) @[Lookup.scala 33:37]
    node _signals_T_84 = mux(_signals_T_13, UInt<1>("h00"), _signals_T_83) @[Lookup.scala 33:37]
    node _signals_T_85 = mux(_signals_T_11, UInt<1>("h00"), _signals_T_84) @[Lookup.scala 33:37]
    node _signals_T_86 = mux(_signals_T_9, UInt<1>("h00"), _signals_T_85) @[Lookup.scala 33:37]
    node _signals_T_87 = mux(_signals_T_7, UInt<1>("h00"), _signals_T_86) @[Lookup.scala 33:37]
    node _signals_T_88 = mux(_signals_T_5, UInt<1>("h00"), _signals_T_87) @[Lookup.scala 33:37]
    node _signals_T_89 = mux(_signals_T_3, UInt<1>("h01"), _signals_T_88) @[Lookup.scala 33:37]
    node signals_8 = mux(_signals_T_1, UInt<1>("h00"), _signals_T_89) @[Lookup.scala 33:37]
    node _signals_T_90 = mux(_signals_T_17, UInt<7>("h040"), UInt<1>("h00")) @[Lookup.scala 33:37]
    node _signals_T_91 = mux(_signals_T_15, UInt<6>("h020"), _signals_T_90) @[Lookup.scala 33:37]
    node _signals_T_92 = mux(_signals_T_13, UInt<6>("h020"), _signals_T_91) @[Lookup.scala 33:37]
    node _signals_T_93 = mux(_signals_T_11, UInt<6>("h020"), _signals_T_92) @[Lookup.scala 33:37]
    node _signals_T_94 = mux(_signals_T_9, UInt<4>("h08"), _signals_T_93) @[Lookup.scala 33:37]
    node _signals_T_95 = mux(_signals_T_7, UInt<6>("h020"), _signals_T_94) @[Lookup.scala 33:37]
    node _signals_T_96 = mux(_signals_T_5, UInt<2>("h02"), _signals_T_95) @[Lookup.scala 33:37]
    node _signals_T_97 = mux(_signals_T_3, UInt<3>("h04"), _signals_T_96) @[Lookup.scala 33:37]
    node signals_9 = mux(_signals_T_1, UInt<3>("h04"), _signals_T_97) @[Lookup.scala 33:37]
    node _signals_T_98 = mux(_signals_T_17, UInt<2>("h02"), UInt<1>("h00")) @[Lookup.scala 33:37]
    node _signals_T_99 = mux(_signals_T_15, UInt<2>("h02"), _signals_T_98) @[Lookup.scala 33:37]
    node _signals_T_100 = mux(_signals_T_13, UInt<1>("h00"), _signals_T_99) @[Lookup.scala 33:37]
    node _signals_T_101 = mux(_signals_T_11, UInt<1>("h00"), _signals_T_100) @[Lookup.scala 33:37]
    node _signals_T_102 = mux(_signals_T_9, UInt<1>("h01"), _signals_T_101) @[Lookup.scala 33:37]
    node _signals_T_103 = mux(_signals_T_7, UInt<1>("h00"), _signals_T_102) @[Lookup.scala 33:37]
    node _signals_T_104 = mux(_signals_T_5, UInt<1>("h00"), _signals_T_103) @[Lookup.scala 33:37]
    node _signals_T_105 = mux(_signals_T_3, UInt<1>("h00"), _signals_T_104) @[Lookup.scala 33:37]
    node signals_10 = mux(_signals_T_1, UInt<1>("h00"), _signals_T_105) @[Lookup.scala 33:37]
    node _signals_T_106 = mux(_signals_T_17, UInt<1>("h01"), UInt<1>("h00")) @[Lookup.scala 33:37]
    node _signals_T_107 = mux(_signals_T_15, UInt<1>("h01"), _signals_T_106) @[Lookup.scala 33:37]
    node _signals_T_108 = mux(_signals_T_13, UInt<1>("h01"), _signals_T_107) @[Lookup.scala 33:37]
    node _signals_T_109 = mux(_signals_T_11, UInt<1>("h01"), _signals_T_108) @[Lookup.scala 33:37]
    node _signals_T_110 = mux(_signals_T_9, UInt<1>("h01"), _signals_T_109) @[Lookup.scala 33:37]
    node _signals_T_111 = mux(_signals_T_7, UInt<1>("h01"), _signals_T_110) @[Lookup.scala 33:37]
    node _signals_T_112 = mux(_signals_T_5, UInt<1>("h01"), _signals_T_111) @[Lookup.scala 33:37]
    node _signals_T_113 = mux(_signals_T_3, UInt<1>("h01"), _signals_T_112) @[Lookup.scala 33:37]
    node signals_11 = mux(_signals_T_1, UInt<1>("h01"), _signals_T_113) @[Lookup.scala 33:37]
    io.branch <= signals_0 @[Decode.scala 54:18]
    io.jump <= signals_1 @[Decode.scala 56:18]
    io.memRead <= signals_2 @[Decode.scala 57:18]
    io.memWrite <= signals_3 @[Decode.scala 58:18]
    io.regWrite <= signals_4 @[Decode.scala 59:18]
    io.toReg <= signals_5 @[Decode.scala 60:18]
    io.resultSel <= signals_6 @[Decode.scala 61:18]
    io.aluSrc <= signals_7 @[Decode.scala 62:18]
    io.pcAdd <= signals_8 @[Decode.scala 63:18]
    io.types <= signals_9 @[Decode.scala 64:18]
    io.aluCtrlOp <= signals_10 @[Decode.scala 65:18]
    io.validInst <= signals_11 @[Decode.scala 66:18]
    node _io_imm_T = bits(io.types, 6, 6) @[Decode.scala 70:27]
    node _io_imm_T_1 = bits(io.types, 5, 5) @[Decode.scala 71:27]
    node _io_imm_T_2 = bits(io.instr, 31, 20) @[Decode.scala 71:42]
    node _io_imm_T_3 = asSInt(_io_imm_T_2) @[Decode.scala 71:51]
    node _io_imm_T_4 = asUInt(_io_imm_T_3) @[Decode.scala 71:58]
    node _io_imm_T_5 = bits(io.types, 4, 4) @[Decode.scala 72:27]
    node _io_imm_T_6 = bits(io.instr, 31, 31) @[Decode.scala 72:55]
    node _io_imm_T_7 = bits(_io_imm_T_6, 0, 0) @[Bitwise.scala 72:15]
    node io_imm_hi_hi = mux(_io_imm_T_7, UInt<20>("h0fffff"), UInt<20>("h00")) @[Bitwise.scala 72:12]
    node io_imm_hi_lo = bits(io.instr, 31, 25) @[Decode.scala 72:70]
    node io_imm_lo = bits(io.instr, 11, 7) @[Decode.scala 72:88]
    node io_imm_hi = cat(io_imm_hi_hi, io_imm_hi_lo) @[Cat.scala 30:58]
    node _io_imm_T_8 = cat(io_imm_hi, io_imm_lo) @[Cat.scala 30:58]
    node _io_imm_T_9 = bits(io.types, 3, 3) @[Decode.scala 73:27]
    node _io_imm_T_10 = bits(io.instr, 31, 31) @[Decode.scala 73:55]
    node _io_imm_T_11 = bits(_io_imm_T_10, 0, 0) @[Bitwise.scala 72:15]
    node io_imm_hi_hi_hi = mux(_io_imm_T_11, UInt<19>("h07ffff"), UInt<19>("h00")) @[Bitwise.scala 72:12]
    node io_imm_hi_hi_lo = bits(io.instr, 31, 31) @[Decode.scala 73:70]
    node io_imm_hi_lo_1 = bits(io.instr, 7, 7) @[Decode.scala 73:84]
    node io_imm_lo_hi = bits(io.instr, 30, 25) @[Decode.scala 73:97]
    node io_imm_lo_lo = bits(io.instr, 11, 8) @[Decode.scala 73:115]
    node io_imm_lo_1 = cat(io_imm_lo_hi, io_imm_lo_lo) @[Cat.scala 30:58]
    node io_imm_hi_hi_1 = cat(io_imm_hi_hi_hi, io_imm_hi_hi_lo) @[Cat.scala 30:58]
    node io_imm_hi_1 = cat(io_imm_hi_hi_1, io_imm_hi_lo_1) @[Cat.scala 30:58]
    node _io_imm_T_12 = cat(io_imm_hi_1, io_imm_lo_1) @[Cat.scala 30:58]
    node _io_imm_T_13 = bits(io.types, 2, 2) @[Decode.scala 74:27]
    node io_imm_hi_2 = bits(io.instr, 31, 12) @[Decode.scala 74:46]
    node io_imm_lo_2 = mux(UInt<1>("h00"), UInt<12>("h0fff"), UInt<12>("h00")) @[Bitwise.scala 72:12]
    node _io_imm_T_14 = cat(io_imm_hi_2, io_imm_lo_2) @[Cat.scala 30:58]
    node _io_imm_T_15 = bits(io.types, 1, 1) @[Decode.scala 75:27]
    node _io_imm_T_16 = bits(io.instr, 31, 31) @[Decode.scala 75:55]
    node _io_imm_T_17 = bits(_io_imm_T_16, 0, 0) @[Bitwise.scala 72:15]
    node io_imm_hi_hi_hi_1 = mux(_io_imm_T_17, UInt<11>("h07ff"), UInt<11>("h00")) @[Bitwise.scala 72:12]
    node io_imm_hi_hi_lo_1 = bits(io.instr, 31, 31) @[Decode.scala 75:70]
    node io_imm_hi_lo_2 = bits(io.instr, 19, 12) @[Decode.scala 75:84]
    node io_imm_lo_hi_1 = bits(io.instr, 20, 20) @[Decode.scala 75:102]
    node io_imm_lo_lo_1 = bits(io.instr, 30, 21) @[Decode.scala 75:116]
    node io_imm_lo_3 = cat(io_imm_lo_hi_1, io_imm_lo_lo_1) @[Cat.scala 30:58]
    node io_imm_hi_hi_2 = cat(io_imm_hi_hi_hi_1, io_imm_hi_hi_lo_1) @[Cat.scala 30:58]
    node io_imm_hi_3 = cat(io_imm_hi_hi_2, io_imm_hi_lo_2) @[Cat.scala 30:58]
    node _io_imm_T_18 = cat(io_imm_hi_3, io_imm_lo_3) @[Cat.scala 30:58]
    node _io_imm_T_19 = bits(io.types, 0, 0) @[Decode.scala 76:27]
    node _io_imm_T_20 = bits(io.instr, 19, 15) @[Decode.scala 76:42]
    node _io_imm_T_21 = cvt(_io_imm_T_20) @[Decode.scala 76:51]
    node _io_imm_T_22 = asUInt(_io_imm_T_21) @[Decode.scala 76:56]
    node _io_imm_T_23 = mux(_io_imm_T, UInt<6>("h020"), UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_imm_T_24 = mux(_io_imm_T_1, _io_imm_T_4, UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_imm_T_25 = mux(_io_imm_T_5, _io_imm_T_8, UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_imm_T_26 = mux(_io_imm_T_9, _io_imm_T_12, UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_imm_T_27 = mux(_io_imm_T_13, _io_imm_T_14, UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_imm_T_28 = mux(_io_imm_T_15, _io_imm_T_18, UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_imm_T_29 = mux(_io_imm_T_19, _io_imm_T_22, UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_imm_T_30 = or(_io_imm_T_23, _io_imm_T_24) @[Mux.scala 27:72]
    node _io_imm_T_31 = or(_io_imm_T_30, _io_imm_T_25) @[Mux.scala 27:72]
    node _io_imm_T_32 = or(_io_imm_T_31, _io_imm_T_26) @[Mux.scala 27:72]
    node _io_imm_T_33 = or(_io_imm_T_32, _io_imm_T_27) @[Mux.scala 27:72]
    node _io_imm_T_34 = or(_io_imm_T_33, _io_imm_T_28) @[Mux.scala 27:72]
    node _io_imm_T_35 = or(_io_imm_T_34, _io_imm_T_29) @[Mux.scala 27:72]
    wire _io_imm_WIRE : UInt<32> @[Mux.scala 27:72]
    _io_imm_WIRE <= _io_imm_T_35 @[Mux.scala 27:72]
    io.imm <= _io_imm_WIRE @[Decode.scala 69:12]
    
  module RegFile : 
    input clock : Clock
    input reset : Reset
    output io : {flip regRAddr1 : UInt<5>, flip regRAddr2 : UInt<5>, flip regWAddr : UInt<5>, flip regWData : UInt<32>, flip wen : UInt<1>, regRData1 : UInt<32>, regRData2 : UInt<32>}
    
    wire _regs_WIRE : UInt<32>[31] @[RegFile.scala 19:31]
    _regs_WIRE[0] <= UInt<32>("h00") @[RegFile.scala 19:31]
    _regs_WIRE[1] <= UInt<32>("h00") @[RegFile.scala 19:31]
    _regs_WIRE[2] <= UInt<32>("h00") @[RegFile.scala 19:31]
    _regs_WIRE[3] <= UInt<32>("h00") @[RegFile.scala 19:31]
    _regs_WIRE[4] <= UInt<32>("h00") @[RegFile.scala 19:31]
    _regs_WIRE[5] <= UInt<32>("h00") @[RegFile.scala 19:31]
    _regs_WIRE[6] <= UInt<32>("h00") @[RegFile.scala 19:31]
    _regs_WIRE[7] <= UInt<32>("h00") @[RegFile.scala 19:31]
    _regs_WIRE[8] <= UInt<32>("h00") @[RegFile.scala 19:31]
    _regs_WIRE[9] <= UInt<32>("h00") @[RegFile.scala 19:31]
    _regs_WIRE[10] <= UInt<32>("h00") @[RegFile.scala 19:31]
    _regs_WIRE[11] <= UInt<32>("h00") @[RegFile.scala 19:31]
    _regs_WIRE[12] <= UInt<32>("h00") @[RegFile.scala 19:31]
    _regs_WIRE[13] <= UInt<32>("h00") @[RegFile.scala 19:31]
    _regs_WIRE[14] <= UInt<32>("h00") @[RegFile.scala 19:31]
    _regs_WIRE[15] <= UInt<32>("h00") @[RegFile.scala 19:31]
    _regs_WIRE[16] <= UInt<32>("h00") @[RegFile.scala 19:31]
    _regs_WIRE[17] <= UInt<32>("h00") @[RegFile.scala 19:31]
    _regs_WIRE[18] <= UInt<32>("h00") @[RegFile.scala 19:31]
    _regs_WIRE[19] <= UInt<32>("h00") @[RegFile.scala 19:31]
    _regs_WIRE[20] <= UInt<32>("h00") @[RegFile.scala 19:31]
    _regs_WIRE[21] <= UInt<32>("h00") @[RegFile.scala 19:31]
    _regs_WIRE[22] <= UInt<32>("h00") @[RegFile.scala 19:31]
    _regs_WIRE[23] <= UInt<32>("h00") @[RegFile.scala 19:31]
    _regs_WIRE[24] <= UInt<32>("h00") @[RegFile.scala 19:31]
    _regs_WIRE[25] <= UInt<32>("h00") @[RegFile.scala 19:31]
    _regs_WIRE[26] <= UInt<32>("h00") @[RegFile.scala 19:31]
    _regs_WIRE[27] <= UInt<32>("h00") @[RegFile.scala 19:31]
    _regs_WIRE[28] <= UInt<32>("h00") @[RegFile.scala 19:31]
    _regs_WIRE[29] <= UInt<32>("h00") @[RegFile.scala 19:31]
    _regs_WIRE[30] <= UInt<32>("h00") @[RegFile.scala 19:31]
    reg regs : UInt<32>[31], clock with : (reset => (reset, _regs_WIRE)) @[RegFile.scala 19:23]
    node _io_regRData1_T = orr(io.regRAddr1) @[RegFile.scala 21:41]
    node _io_regRData1_T_1 = mux(_io_regRData1_T, regs[io.regRAddr1], UInt<1>("h00")) @[RegFile.scala 21:24]
    io.regRData1 <= _io_regRData1_T_1 @[RegFile.scala 21:18]
    node _io_regRData2_T = orr(io.regRAddr2) @[RegFile.scala 22:41]
    node _io_regRData2_T_1 = mux(_io_regRData2_T, regs[io.regRAddr2], UInt<1>("h00")) @[RegFile.scala 22:24]
    io.regRData2 <= _io_regRData2_T_1 @[RegFile.scala 22:18]
    when io.wen : @[RegFile.scala 23:17]
      node _T = orr(io.regWAddr) @[RegFile.scala 24:26]
      when _T : @[RegFile.scala 24:30]
        regs[io.regWAddr] <= io.regWData @[RegFile.scala 25:31]
        skip @[RegFile.scala 24:30]
      skip @[RegFile.scala 23:17]
    
  module ALUCtrl : 
    input clock : Clock
    input reset : Reset
    output io : {flip funct3 : UInt<3>, flip funct7 : UInt<7>, flip aluCtrlOp : UInt<2>, aluOp : UInt<4>}
    
    node _io_aluOp_T = cat(UInt<1>("h00"), UInt<4>("h00")) @[Cat.scala 30:58]
    node io_aluOp_hi = bits(io.funct7, 5, 5) @[ALUCtrl.scala 34:37]
    node _io_aluOp_T_1 = cat(io_aluOp_hi, io.funct3) @[Cat.scala 30:58]
    node _io_aluOp_T_2 = eq(UInt<1>("h00"), io.funct3) @[Mux.scala 80:60]
    node _io_aluOp_T_3 = mux(_io_aluOp_T_2, UInt<4>("h09"), UInt<4>("h0f")) @[Mux.scala 80:57]
    node _io_aluOp_T_4 = eq(UInt<1>("h01"), io.funct3) @[Mux.scala 80:60]
    node _io_aluOp_T_5 = mux(_io_aluOp_T_4, UInt<4>("h0a"), _io_aluOp_T_3) @[Mux.scala 80:57]
    node _io_aluOp_T_6 = eq(UInt<3>("h04"), io.funct3) @[Mux.scala 80:60]
    node _io_aluOp_T_7 = mux(_io_aluOp_T_6, UInt<4>("h02"), _io_aluOp_T_5) @[Mux.scala 80:57]
    node _io_aluOp_T_8 = eq(UInt<3>("h05"), io.funct3) @[Mux.scala 80:60]
    node _io_aluOp_T_9 = mux(_io_aluOp_T_8, UInt<4>("h0c"), _io_aluOp_T_7) @[Mux.scala 80:57]
    node _io_aluOp_T_10 = eq(UInt<3>("h06"), io.funct3) @[Mux.scala 80:60]
    node _io_aluOp_T_11 = mux(_io_aluOp_T_10, UInt<4>("h03"), _io_aluOp_T_9) @[Mux.scala 80:57]
    node _io_aluOp_T_12 = eq(UInt<3>("h07"), io.funct3) @[Mux.scala 80:60]
    node _io_aluOp_T_13 = mux(_io_aluOp_T_12, UInt<4>("h0b"), _io_aluOp_T_11) @[Mux.scala 80:57]
    node _io_aluOp_T_14 = eq(UInt<1>("h00"), io.aluCtrlOp) @[Mux.scala 80:60]
    node _io_aluOp_T_15 = mux(_io_aluOp_T_14, _io_aluOp_T, UInt<4>("h0f")) @[Mux.scala 80:57]
    node _io_aluOp_T_16 = eq(UInt<2>("h02"), io.aluCtrlOp) @[Mux.scala 80:60]
    node _io_aluOp_T_17 = mux(_io_aluOp_T_16, _io_aluOp_T_1, _io_aluOp_T_15) @[Mux.scala 80:57]
    node _io_aluOp_T_18 = eq(UInt<1>("h01"), io.aluCtrlOp) @[Mux.scala 80:60]
    node _io_aluOp_T_19 = mux(_io_aluOp_T_18, _io_aluOp_T_13, _io_aluOp_T_17) @[Mux.scala 80:57]
    io.aluOp <= _io_aluOp_T_19 @[ALUCtrl.scala 31:14]
    
  module ALU : 
    input clock : Clock
    input reset : Reset
    output io : {flip aluIn1 : UInt<32>, flip aluIn2 : UInt<32>, flip aluOp : UInt<4>, aluOut : UInt<32>}
    
    node _sum_T = bits(io.aluOp, 3, 3) @[ALU.scala 39:42]
    node _sum_T_1 = bits(io.aluOp, 1, 1) @[ALU.scala 39:56]
    node _sum_T_2 = or(_sum_T, _sum_T_1) @[ALU.scala 39:46]
    node _sum_T_3 = sub(UInt<1>("h00"), io.aluIn2) @[ALU.scala 39:61]
    node _sum_T_4 = tail(_sum_T_3, 1) @[ALU.scala 39:61]
    node _sum_T_5 = mux(_sum_T_2, _sum_T_4, io.aluIn2) @[ALU.scala 39:33]
    node _sum_T_6 = add(io.aluIn1, _sum_T_5) @[ALU.scala 39:28]
    node sum = tail(_sum_T_6, 1) @[ALU.scala 39:28]
    node neq = orr(sum) @[ALU.scala 40:22]
    node _cmp_T = bits(io.aluIn1, 31, 31) @[ALU.scala 41:31]
    node _cmp_T_1 = bits(io.aluIn2, 31, 31) @[ALU.scala 41:49]
    node _cmp_T_2 = eq(_cmp_T, _cmp_T_1) @[ALU.scala 41:36]
    node _cmp_T_3 = bits(sum, 31, 31) @[ALU.scala 41:58]
    node _cmp_T_4 = bits(io.aluOp, 0, 0) @[ALU.scala 42:30]
    node _cmp_T_5 = bits(io.aluIn2, 31, 31) @[ALU.scala 42:44]
    node _cmp_T_6 = bits(io.aluIn1, 31, 31) @[ALU.scala 42:59]
    node _cmp_T_7 = mux(_cmp_T_4, _cmp_T_5, _cmp_T_6) @[ALU.scala 42:21]
    node cmp = mux(_cmp_T_2, _cmp_T_3, _cmp_T_7) @[ALU.scala 41:21]
    node shamt = bits(io.aluIn2, 4, 0) @[ALU.scala 43:27]
    node _shin_T = bits(io.aluOp, 3, 3) @[ALU.scala 44:30]
    node _shin_T_1 = shl(UInt<16>("h0ffff"), 16) @[Bitwise.scala 102:47]
    node _shin_T_2 = xor(UInt<32>("h0ffffffff"), _shin_T_1) @[Bitwise.scala 102:21]
    node _shin_T_3 = shr(io.aluIn1, 16) @[Bitwise.scala 103:21]
    node _shin_T_4 = and(_shin_T_3, _shin_T_2) @[Bitwise.scala 103:31]
    node _shin_T_5 = bits(io.aluIn1, 15, 0) @[Bitwise.scala 103:46]
    node _shin_T_6 = shl(_shin_T_5, 16) @[Bitwise.scala 103:65]
    node _shin_T_7 = not(_shin_T_2) @[Bitwise.scala 103:77]
    node _shin_T_8 = and(_shin_T_6, _shin_T_7) @[Bitwise.scala 103:75]
    node _shin_T_9 = or(_shin_T_4, _shin_T_8) @[Bitwise.scala 103:39]
    node _shin_T_10 = bits(_shin_T_2, 23, 0) @[Bitwise.scala 102:28]
    node _shin_T_11 = shl(_shin_T_10, 8) @[Bitwise.scala 102:47]
    node _shin_T_12 = xor(_shin_T_2, _shin_T_11) @[Bitwise.scala 102:21]
    node _shin_T_13 = shr(_shin_T_9, 8) @[Bitwise.scala 103:21]
    node _shin_T_14 = and(_shin_T_13, _shin_T_12) @[Bitwise.scala 103:31]
    node _shin_T_15 = bits(_shin_T_9, 23, 0) @[Bitwise.scala 103:46]
    node _shin_T_16 = shl(_shin_T_15, 8) @[Bitwise.scala 103:65]
    node _shin_T_17 = not(_shin_T_12) @[Bitwise.scala 103:77]
    node _shin_T_18 = and(_shin_T_16, _shin_T_17) @[Bitwise.scala 103:75]
    node _shin_T_19 = or(_shin_T_14, _shin_T_18) @[Bitwise.scala 103:39]
    node _shin_T_20 = bits(_shin_T_12, 27, 0) @[Bitwise.scala 102:28]
    node _shin_T_21 = shl(_shin_T_20, 4) @[Bitwise.scala 102:47]
    node _shin_T_22 = xor(_shin_T_12, _shin_T_21) @[Bitwise.scala 102:21]
    node _shin_T_23 = shr(_shin_T_19, 4) @[Bitwise.scala 103:21]
    node _shin_T_24 = and(_shin_T_23, _shin_T_22) @[Bitwise.scala 103:31]
    node _shin_T_25 = bits(_shin_T_19, 27, 0) @[Bitwise.scala 103:46]
    node _shin_T_26 = shl(_shin_T_25, 4) @[Bitwise.scala 103:65]
    node _shin_T_27 = not(_shin_T_22) @[Bitwise.scala 103:77]
    node _shin_T_28 = and(_shin_T_26, _shin_T_27) @[Bitwise.scala 103:75]
    node _shin_T_29 = or(_shin_T_24, _shin_T_28) @[Bitwise.scala 103:39]
    node _shin_T_30 = bits(_shin_T_22, 29, 0) @[Bitwise.scala 102:28]
    node _shin_T_31 = shl(_shin_T_30, 2) @[Bitwise.scala 102:47]
    node _shin_T_32 = xor(_shin_T_22, _shin_T_31) @[Bitwise.scala 102:21]
    node _shin_T_33 = shr(_shin_T_29, 2) @[Bitwise.scala 103:21]
    node _shin_T_34 = and(_shin_T_33, _shin_T_32) @[Bitwise.scala 103:31]
    node _shin_T_35 = bits(_shin_T_29, 29, 0) @[Bitwise.scala 103:46]
    node _shin_T_36 = shl(_shin_T_35, 2) @[Bitwise.scala 103:65]
    node _shin_T_37 = not(_shin_T_32) @[Bitwise.scala 103:77]
    node _shin_T_38 = and(_shin_T_36, _shin_T_37) @[Bitwise.scala 103:75]
    node _shin_T_39 = or(_shin_T_34, _shin_T_38) @[Bitwise.scala 103:39]
    node _shin_T_40 = bits(_shin_T_32, 30, 0) @[Bitwise.scala 102:28]
    node _shin_T_41 = shl(_shin_T_40, 1) @[Bitwise.scala 102:47]
    node _shin_T_42 = xor(_shin_T_32, _shin_T_41) @[Bitwise.scala 102:21]
    node _shin_T_43 = shr(_shin_T_39, 1) @[Bitwise.scala 103:21]
    node _shin_T_44 = and(_shin_T_43, _shin_T_42) @[Bitwise.scala 103:31]
    node _shin_T_45 = bits(_shin_T_39, 30, 0) @[Bitwise.scala 103:46]
    node _shin_T_46 = shl(_shin_T_45, 1) @[Bitwise.scala 103:65]
    node _shin_T_47 = not(_shin_T_42) @[Bitwise.scala 103:77]
    node _shin_T_48 = and(_shin_T_46, _shin_T_47) @[Bitwise.scala 103:75]
    node _shin_T_49 = or(_shin_T_44, _shin_T_48) @[Bitwise.scala 103:39]
    node shin = mux(_shin_T, io.aluIn1, _shin_T_49) @[ALU.scala 44:21]
    node _shiftr_T = bits(io.aluOp, 0, 0) @[ALU.scala 45:31]
    node _shiftr_T_1 = bits(shin, 31, 31) @[ALU.scala 45:42]
    node shiftr_hi = and(_shiftr_T, _shiftr_T_1) @[ALU.scala 45:35]
    node _shiftr_T_2 = cat(shiftr_hi, shin) @[Cat.scala 30:58]
    node _shiftr_T_3 = asSInt(_shiftr_T_2) @[ALU.scala 45:54]
    node _shiftr_T_4 = dshr(_shiftr_T_3, shamt) @[ALU.scala 45:61]
    node shiftr = bits(_shiftr_T_4, 31, 0) @[ALU.scala 45:70]
    node _shiftl_T = shl(UInt<16>("h0ffff"), 16) @[Bitwise.scala 102:47]
    node _shiftl_T_1 = xor(UInt<32>("h0ffffffff"), _shiftl_T) @[Bitwise.scala 102:21]
    node _shiftl_T_2 = shr(shiftr, 16) @[Bitwise.scala 103:21]
    node _shiftl_T_3 = and(_shiftl_T_2, _shiftl_T_1) @[Bitwise.scala 103:31]
    node _shiftl_T_4 = bits(shiftr, 15, 0) @[Bitwise.scala 103:46]
    node _shiftl_T_5 = shl(_shiftl_T_4, 16) @[Bitwise.scala 103:65]
    node _shiftl_T_6 = not(_shiftl_T_1) @[Bitwise.scala 103:77]
    node _shiftl_T_7 = and(_shiftl_T_5, _shiftl_T_6) @[Bitwise.scala 103:75]
    node _shiftl_T_8 = or(_shiftl_T_3, _shiftl_T_7) @[Bitwise.scala 103:39]
    node _shiftl_T_9 = bits(_shiftl_T_1, 23, 0) @[Bitwise.scala 102:28]
    node _shiftl_T_10 = shl(_shiftl_T_9, 8) @[Bitwise.scala 102:47]
    node _shiftl_T_11 = xor(_shiftl_T_1, _shiftl_T_10) @[Bitwise.scala 102:21]
    node _shiftl_T_12 = shr(_shiftl_T_8, 8) @[Bitwise.scala 103:21]
    node _shiftl_T_13 = and(_shiftl_T_12, _shiftl_T_11) @[Bitwise.scala 103:31]
    node _shiftl_T_14 = bits(_shiftl_T_8, 23, 0) @[Bitwise.scala 103:46]
    node _shiftl_T_15 = shl(_shiftl_T_14, 8) @[Bitwise.scala 103:65]
    node _shiftl_T_16 = not(_shiftl_T_11) @[Bitwise.scala 103:77]
    node _shiftl_T_17 = and(_shiftl_T_15, _shiftl_T_16) @[Bitwise.scala 103:75]
    node _shiftl_T_18 = or(_shiftl_T_13, _shiftl_T_17) @[Bitwise.scala 103:39]
    node _shiftl_T_19 = bits(_shiftl_T_11, 27, 0) @[Bitwise.scala 102:28]
    node _shiftl_T_20 = shl(_shiftl_T_19, 4) @[Bitwise.scala 102:47]
    node _shiftl_T_21 = xor(_shiftl_T_11, _shiftl_T_20) @[Bitwise.scala 102:21]
    node _shiftl_T_22 = shr(_shiftl_T_18, 4) @[Bitwise.scala 103:21]
    node _shiftl_T_23 = and(_shiftl_T_22, _shiftl_T_21) @[Bitwise.scala 103:31]
    node _shiftl_T_24 = bits(_shiftl_T_18, 27, 0) @[Bitwise.scala 103:46]
    node _shiftl_T_25 = shl(_shiftl_T_24, 4) @[Bitwise.scala 103:65]
    node _shiftl_T_26 = not(_shiftl_T_21) @[Bitwise.scala 103:77]
    node _shiftl_T_27 = and(_shiftl_T_25, _shiftl_T_26) @[Bitwise.scala 103:75]
    node _shiftl_T_28 = or(_shiftl_T_23, _shiftl_T_27) @[Bitwise.scala 103:39]
    node _shiftl_T_29 = bits(_shiftl_T_21, 29, 0) @[Bitwise.scala 102:28]
    node _shiftl_T_30 = shl(_shiftl_T_29, 2) @[Bitwise.scala 102:47]
    node _shiftl_T_31 = xor(_shiftl_T_21, _shiftl_T_30) @[Bitwise.scala 102:21]
    node _shiftl_T_32 = shr(_shiftl_T_28, 2) @[Bitwise.scala 103:21]
    node _shiftl_T_33 = and(_shiftl_T_32, _shiftl_T_31) @[Bitwise.scala 103:31]
    node _shiftl_T_34 = bits(_shiftl_T_28, 29, 0) @[Bitwise.scala 103:46]
    node _shiftl_T_35 = shl(_shiftl_T_34, 2) @[Bitwise.scala 103:65]
    node _shiftl_T_36 = not(_shiftl_T_31) @[Bitwise.scala 103:77]
    node _shiftl_T_37 = and(_shiftl_T_35, _shiftl_T_36) @[Bitwise.scala 103:75]
    node _shiftl_T_38 = or(_shiftl_T_33, _shiftl_T_37) @[Bitwise.scala 103:39]
    node _shiftl_T_39 = bits(_shiftl_T_31, 30, 0) @[Bitwise.scala 102:28]
    node _shiftl_T_40 = shl(_shiftl_T_39, 1) @[Bitwise.scala 102:47]
    node _shiftl_T_41 = xor(_shiftl_T_31, _shiftl_T_40) @[Bitwise.scala 102:21]
    node _shiftl_T_42 = shr(_shiftl_T_38, 1) @[Bitwise.scala 103:21]
    node _shiftl_T_43 = and(_shiftl_T_42, _shiftl_T_41) @[Bitwise.scala 103:31]
    node _shiftl_T_44 = bits(_shiftl_T_38, 30, 0) @[Bitwise.scala 103:46]
    node _shiftl_T_45 = shl(_shiftl_T_44, 1) @[Bitwise.scala 103:65]
    node _shiftl_T_46 = not(_shiftl_T_41) @[Bitwise.scala 103:77]
    node _shiftl_T_47 = and(_shiftl_T_45, _shiftl_T_46) @[Bitwise.scala 103:75]
    node shiftl = or(_shiftl_T_43, _shiftl_T_47) @[Bitwise.scala 103:39]
    node _out_T = xor(io.aluIn1, io.aluIn2) @[ALU.scala 55:36]
    node _out_T_1 = or(io.aluIn1, io.aluIn2) @[ALU.scala 58:36]
    node _out_T_2 = and(io.aluIn1, io.aluIn2) @[ALU.scala 59:36]
    node _out_T_3 = eq(neq, UInt<1>("h00")) @[ALU.scala 61:25]
    node _out_T_4 = not(cmp) @[ALU.scala 63:25]
    node _out_T_5 = not(cmp) @[ALU.scala 64:25]
    node _out_T_6 = eq(UInt<4>("h00"), io.aluOp) @[Mux.scala 80:60]
    node _out_T_7 = mux(_out_T_6, sum, UInt<1>("h00")) @[Mux.scala 80:57]
    node _out_T_8 = eq(UInt<4>("h08"), io.aluOp) @[Mux.scala 80:60]
    node _out_T_9 = mux(_out_T_8, sum, _out_T_7) @[Mux.scala 80:57]
    node _out_T_10 = eq(UInt<4>("h01"), io.aluOp) @[Mux.scala 80:60]
    node _out_T_11 = mux(_out_T_10, shiftl, _out_T_9) @[Mux.scala 80:57]
    node _out_T_12 = eq(UInt<4>("h02"), io.aluOp) @[Mux.scala 80:60]
    node _out_T_13 = mux(_out_T_12, cmp, _out_T_11) @[Mux.scala 80:57]
    node _out_T_14 = eq(UInt<4>("h03"), io.aluOp) @[Mux.scala 80:60]
    node _out_T_15 = mux(_out_T_14, cmp, _out_T_13) @[Mux.scala 80:57]
    node _out_T_16 = eq(UInt<4>("h04"), io.aluOp) @[Mux.scala 80:60]
    node _out_T_17 = mux(_out_T_16, _out_T, _out_T_15) @[Mux.scala 80:57]
    node _out_T_18 = eq(UInt<4>("h05"), io.aluOp) @[Mux.scala 80:60]
    node _out_T_19 = mux(_out_T_18, shiftr, _out_T_17) @[Mux.scala 80:57]
    node _out_T_20 = eq(UInt<4>("h0d"), io.aluOp) @[Mux.scala 80:60]
    node _out_T_21 = mux(_out_T_20, shiftr, _out_T_19) @[Mux.scala 80:57]
    node _out_T_22 = eq(UInt<4>("h06"), io.aluOp) @[Mux.scala 80:60]
    node _out_T_23 = mux(_out_T_22, _out_T_1, _out_T_21) @[Mux.scala 80:57]
    node _out_T_24 = eq(UInt<4>("h07"), io.aluOp) @[Mux.scala 80:60]
    node _out_T_25 = mux(_out_T_24, _out_T_2, _out_T_23) @[Mux.scala 80:57]
    node _out_T_26 = eq(UInt<4>("h09"), io.aluOp) @[Mux.scala 80:60]
    node _out_T_27 = mux(_out_T_26, _out_T_3, _out_T_25) @[Mux.scala 80:57]
    node _out_T_28 = eq(UInt<4>("h0a"), io.aluOp) @[Mux.scala 80:60]
    node _out_T_29 = mux(_out_T_28, neq, _out_T_27) @[Mux.scala 80:57]
    node _out_T_30 = eq(UInt<4>("h0c"), io.aluOp) @[Mux.scala 80:60]
    node _out_T_31 = mux(_out_T_30, _out_T_4, _out_T_29) @[Mux.scala 80:57]
    node _out_T_32 = eq(UInt<4>("h0b"), io.aluOp) @[Mux.scala 80:60]
    node out = mux(_out_T_32, _out_T_5, _out_T_31) @[Mux.scala 80:57]
    io.aluOut <= out @[ALU.scala 67:15]
    
  module Adder : 
    input clock : Clock
    input reset : Reset
    output io : {flip inputx : UInt<32>, flip inputy : UInt<32>, result : UInt<32>}
    
    node _io_result_T = add(io.inputx, io.inputy) @[Utils.scala 14:26]
    node _io_result_T_1 = tail(_io_result_T, 1) @[Utils.scala 14:26]
    io.result <= _io_result_T_1 @[Utils.scala 14:13]
    
  module Adder_1 : 
    input clock : Clock
    input reset : Reset
    output io : {flip inputx : UInt<32>, flip inputy : UInt<32>, result : UInt<32>}
    
    node _io_result_T = add(io.inputx, io.inputy) @[Utils.scala 14:26]
    node _io_result_T_1 = tail(_io_result_T, 1) @[Utils.scala 14:26]
    io.result <= _io_result_T_1 @[Utils.scala 14:13]
    
  module SCPU : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip imem : {flip address : UInt<32>, flip valid : UInt<1>, good : UInt<1>, instruction : UInt<32>, ready : UInt<1>}, flip dmem : {flip address : UInt<32>, flip valid : UInt<1>, good : UInt<1>, flip writeData : UInt<32>, flip memRead : UInt<1>, flip memWrite : UInt<1>, flip maskMode : UInt<2>, flip sext : UInt<1>, readData : UInt<32>}}
    
    reg pc : UInt, clock with : (reset => (reset, UInt<1>("h00"))) @[CPU.scala 17:37]
    inst decode of Decode @[CPU.scala 19:26]
    decode.clock <= clock
    decode.reset <= reset
    inst regFile of RegFile @[CPU.scala 20:26]
    regFile.clock <= clock
    regFile.reset <= reset
    inst aluCtrl of ALUCtrl @[CPU.scala 21:26]
    aluCtrl.clock <= clock
    aluCtrl.reset <= reset
    inst alu of ALU @[CPU.scala 22:26]
    alu.clock <= clock
    alu.reset <= reset
    inst pcPlus4 of Adder @[CPU.scala 23:26]
    pcPlus4.clock <= clock
    pcPlus4.reset <= reset
    inst brAdd of Adder_1 @[CPU.scala 24:26]
    brAdd.clock <= clock
    brAdd.reset <= reset
    reg cycleCount : UInt<30>, clock with : (reset => (reset, UInt<30>("h00"))) @[Counter.scala 60:40]
    wire cycleCount_wrap : UInt<1>
    cycleCount_wrap <= UInt<1>("h00")
    when UInt<1>("h01") : @[Counter.scala 118:17]
      node cycleCount_wrap_wrap = eq(cycleCount, UInt<30>("h03fffffff")) @[Counter.scala 72:24]
      node _cycleCount_wrap_value_T = add(cycleCount, UInt<1>("h01")) @[Counter.scala 76:24]
      node _cycleCount_wrap_value_T_1 = tail(_cycleCount_wrap_value_T, 1) @[Counter.scala 76:24]
      cycleCount <= _cycleCount_wrap_value_T_1 @[Counter.scala 76:15]
      cycleCount_wrap <= cycleCount_wrap_wrap @[Counter.scala 118:24]
      skip @[Counter.scala 118:17]
    io.imem.address <= pc @[CPU.scala 27:21]
    io.imem.valid <= UInt<1>("h01") @[CPU.scala 28:21]
    pcPlus4.io.inputx <= pc @[CPU.scala 30:23]
    pcPlus4.io.inputy <= UInt<3>("h04") @[CPU.scala 31:23]
    node opcode = bits(io.imem.instruction, 6, 0) @[CPU.scala 34:23]
    node _regFile_io_regRAddr1_T = bits(io.imem.instruction, 19, 15) @[CPU.scala 35:34]
    regFile.io.regRAddr1 <= _regFile_io_regRAddr1_T @[CPU.scala 35:26]
    node _regFile_io_regRAddr2_T = bits(io.imem.instruction, 24, 20) @[CPU.scala 36:34]
    regFile.io.regRAddr2 <= _regFile_io_regRAddr2_T @[CPU.scala 36:26]
    node _regFile_io_regWAddr_T = bits(io.imem.instruction, 11, 7) @[CPU.scala 37:34]
    regFile.io.regWAddr <= _regFile_io_regWAddr_T @[CPU.scala 37:26]
    regFile.io.wen <= decode.io.regWrite @[CPU.scala 38:26]
    decode.io.instr <= io.imem.instruction @[CPU.scala 40:21]
    aluCtrl.io.aluCtrlOp <= decode.io.aluCtrlOp @[CPU.scala 43:26]
    node _aluCtrl_io_funct3_T = bits(io.imem.instruction, 14, 12) @[CPU.scala 44:34]
    aluCtrl.io.funct3 <= _aluCtrl_io_funct3_T @[CPU.scala 44:26]
    node _aluCtrl_io_funct7_T = bits(io.imem.instruction, 31, 25) @[CPU.scala 45:34]
    aluCtrl.io.funct7 <= _aluCtrl_io_funct7_T @[CPU.scala 45:26]
    alu.io.aluOp <= aluCtrl.io.aluOp @[CPU.scala 47:19]
    node _alu_io_aluIn1_T = mux(decode.io.pcAdd, pc, regFile.io.regRData1) @[CPU.scala 48:25]
    alu.io.aluIn1 <= _alu_io_aluIn1_T @[CPU.scala 48:19]
    node _alu_io_aluIn2_T = mux(decode.io.aluSrc, decode.io.imm, regFile.io.regRData2) @[CPU.scala 49:25]
    alu.io.aluIn2 <= _alu_io_aluIn2_T @[CPU.scala 49:19]
    node _result_T = eq(UInt<1>("h00"), decode.io.resultSel) @[Mux.scala 80:60]
    node _result_T_1 = mux(_result_T, alu.io.aluOut, UInt<1>("h00")) @[Mux.scala 80:57]
    node _result_T_2 = eq(UInt<1>("h01"), decode.io.resultSel) @[Mux.scala 80:60]
    node _result_T_3 = mux(_result_T_2, decode.io.imm, _result_T_1) @[Mux.scala 80:57]
    node _result_T_4 = eq(UInt<2>("h02"), decode.io.resultSel) @[Mux.scala 80:60]
    node result = mux(_result_T_4, pcPlus4.io.result, _result_T_3) @[Mux.scala 80:57]
    io.dmem.address <= alu.io.aluOut @[CPU.scala 57:23]
    io.dmem.writeData <= regFile.io.regRData2 @[CPU.scala 58:23]
    io.dmem.memRead <= decode.io.memRead @[CPU.scala 59:23]
    io.dmem.memWrite <= decode.io.memWrite @[CPU.scala 60:23]
    node _io_dmem_maskMode_T = bits(io.imem.instruction, 13, 12) @[CPU.scala 61:31]
    io.dmem.maskMode <= _io_dmem_maskMode_T @[CPU.scala 61:23]
    node _io_dmem_sext_T = bits(io.imem.instruction, 14, 14) @[CPU.scala 62:32]
    node _io_dmem_sext_T_1 = not(_io_dmem_sext_T) @[CPU.scala 62:26]
    io.dmem.sext <= _io_dmem_sext_T_1 @[CPU.scala 62:23]
    node _T = or(io.dmem.memRead, io.dmem.memWrite) @[CPU.scala 63:26]
    when _T : @[CPU.scala 63:47]
      io.dmem.valid <= UInt<1>("h01") @[CPU.scala 64:21]
      skip @[CPU.scala 63:47]
    else : @[CPU.scala 65:18]
      io.dmem.valid <= UInt<1>("h00") @[CPU.scala 66:21]
      skip @[CPU.scala 65:18]
    node _regFile_io_regWData_T = eq(decode.io.toReg, UInt<1>("h01")) @[CPU.scala 69:48]
    node _regFile_io_regWData_T_1 = mux(_regFile_io_regWData_T, io.dmem.readData, result) @[CPU.scala 69:31]
    regFile.io.regWData <= _regFile_io_regWData_T_1 @[CPU.scala 69:25]
    brAdd.io.inputx <= pc @[CPU.scala 71:21]
    brAdd.io.inputy <= decode.io.imm @[CPU.scala 72:21]
    node _pc_T = bits(alu.io.aluOut, 0, 0) @[CPU.scala 76:43]
    node _pc_T_1 = and(decode.io.branch, _pc_T) @[CPU.scala 76:27]
    node _pc_T_2 = eq(decode.io.jump, UInt<1>("h01")) @[CPU.scala 77:25]
    node _pc_T_3 = eq(decode.io.jump, UInt<2>("h02")) @[CPU.scala 78:25]
    node pc_hi = mux(UInt<1>("h01"), UInt<31>("h07fffffff"), UInt<31>("h00")) @[Bitwise.scala 72:12]
    node _pc_T_4 = cat(pc_hi, UInt<1>("h00")) @[Cat.scala 30:58]
    node _pc_T_5 = and(alu.io.aluOut, _pc_T_4) @[CPU.scala 78:52]
    node _pc_T_6 = mux(_pc_T_3, _pc_T_5, pcPlus4.io.result) @[Mux.scala 98:16]
    node _pc_T_7 = mux(_pc_T_2, brAdd.io.result, _pc_T_6) @[Mux.scala 98:16]
    node _pc_T_8 = mux(_pc_T_1, brAdd.io.result, _pc_T_7) @[Mux.scala 98:16]
    pc <= _pc_T_8 @[CPU.scala 75:8]
    
